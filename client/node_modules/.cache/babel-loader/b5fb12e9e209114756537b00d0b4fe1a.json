{"ast":null,"code":"import _toConsumableArray from \"/Users/erikwoodworth/Coding/ARC/data-arc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/erikwoodworth/Coding/ARC/data-arc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/erikwoodworth/Coding/ARC/data-arc/client/src/components/Legends/ColorRamp/index.js\";\nimport React, { useState, useEffect } from \"react\"; // import API from \"../../utils/API\";\n\nimport colormap from 'colormap';\nvar colorRampWidth = 80;\nvar lableWidth = (100 - colorRampWidth) / 2;\n\nvar ColorRamp = function ColorRamp(props) {\n  // console.log(props)\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      maxValue = _useState2[0],\n      setMaxValue = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      minValue = _useState4[0],\n      setMinValue = _useState4[1];\n\n  var numberOfBins = props.layout.numberOfBins;\n  var colorMap = props.layout.colorMap;\n  var reverse = props.layout.colorMapReverse;\n  var colors = reverse ? colormap({\n    colormap: colorMap,\n    nshades: numberOfBins,\n    format: 'hex',\n    alpha: 1\n  }).reverse() : colormap({\n    colormap: colorMap,\n    nshades: numberOfBins,\n    format: 'hex',\n    alpha: 1\n  });\n  var binWidthRatio = colorRampWidth / numberOfBins;\n  var binWidth = String(binWidthRatio) + \"%\";\n\n  var handleMaxMin = function handleMaxMin() {\n    var valueArray = props.data ? props.data.features.filter(function (feature) {\n      return feature.properties[props.selectedVariable];\n    }).map(function (feature) {\n      var variable = feature.properties[props.selectedVariable]; //   const normalizer=props.normalizedBy ? feature.properties[props.normalizedBy] : 1\n      // console.log(variable ? variable : null);\n\n      return variable;\n    }) : null;\n    var maxValue = valueArray !== null ? Math.max.apply(Math, _toConsumableArray(valueArray)) : 'no data';\n    var minValue = valueArray !== null ? Math.min.apply(Math, _toConsumableArray(valueArray)) : 'no data';\n    setMinValue(minValue);\n    setMaxValue(maxValue);\n  };\n\n  useEffect(function () {\n    return handleMaxMin();\n  }, [props.data, props.selectedVariable]);\n  return React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '5%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      // position: 'relative',\n      // bottom: '60px',\n      paddingTop: '8px',\n      borderRadius: '5px 0 0 5px',\n      // border: 'solid grey .8px', \n      backgroundColor: 'white',\n      fontSize: '1.2em',\n      textAlign: 'center',\n      float: 'left',\n      height: '100%',\n      width: String(lableWidth) + '%',\n      marginTop: '15px',\n      zIndex: '999'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, minValue ? minValue : null), colors ? colors.map(function (color) {\n    return React.createElement(\"div\", {\n      style: {\n        // position: 'relative',\n        // bottom: '60px',\n        float: 'left',\n        height: '100%',\n        backgroundColor: color,\n        width: binWidth,\n        marginTop: '15px',\n        opacity: 1,\n        zIndex: '999'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    });\n  }) : null, React.createElement(\"div\", {\n    style: {\n      // position: 'relative',\n      // bottom: '60px',\n      borderRadius: '0 5px 5px 0',\n      paddingTop: '8px',\n      // border: 'solid grey .8px', \n      backgroundColor: 'white',\n      fontSize: '1.2em',\n      textAlign: 'center',\n      float: 'left',\n      height: '100%',\n      width: String(lableWidth) + '%',\n      marginTop: '15px',\n      zIndex: '999'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, maxValue ? maxValue : null));\n};\n\nexport default ColorRamp;","map":{"version":3,"sources":["/Users/erikwoodworth/Coding/ARC/data-arc/client/src/components/Legends/ColorRamp/index.js"],"names":["React","useState","useEffect","colormap","colorRampWidth","lableWidth","ColorRamp","props","maxValue","setMaxValue","minValue","setMinValue","numberOfBins","layout","colorMap","reverse","colorMapReverse","colors","nshades","format","alpha","binWidthRatio","binWidth","String","handleMaxMin","valueArray","data","features","filter","feature","properties","selectedVariable","map","variable","Math","max","min","width","height","paddingTop","borderRadius","backgroundColor","fontSize","textAlign","float","marginTop","zIndex","color","opacity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import API from \"../../utils/API\";\nimport colormap from 'colormap';\n\nconst colorRampWidth = 80;\nconst lableWidth = (100 - colorRampWidth)/2\n\nconst ColorRamp = props => {\n\n    // console.log(props)\n\n    const [maxValue, setMaxValue] = useState();\n    const [minValue, setMinValue] = useState();\n\n\n    const numberOfBins = props.layout.numberOfBins;\n    const colorMap = props.layout.colorMap;\n    const reverse = props.layout.colorMapReverse;\n\n    const colors = reverse ? colormap({\n        colormap: colorMap,\n        nshades: numberOfBins,\n        format: 'hex',\n        alpha: 1\n      }).reverse() : colormap({\n        colormap: colorMap,\n        nshades: numberOfBins,\n        format: 'hex',\n        alpha: 1\n      });\n\n    const binWidthRatio = colorRampWidth/numberOfBins;\n    const binWidth = String(binWidthRatio) + \"%\";\n\n    const handleMaxMin = () => {\n        const valueArray = props.data ? props.data.features\n        .filter(feature => feature.properties[props.selectedVariable])\n        .map(feature => {\n        \n            const variable = feature.properties[props.selectedVariable];\n            //   const normalizer=props.normalizedBy ? feature.properties[props.normalizedBy] : 1\n            // console.log(variable ? variable : null);\n            return variable}) : null;\n    \n        const maxValue = valueArray !== null ? Math.max(...valueArray) : 'no data';\n        const minValue = valueArray !== null ? Math.min(...valueArray) : 'no data';\n        \n        setMinValue(minValue);\n        setMaxValue(maxValue);\n    \n    }\n\n    useEffect(() => handleMaxMin(), [props.data, props.selectedVariable])\n\n    return (\n\n        <div style={{width: '100%', height: '5%'}}>\n            <div\n                style={{\n                    // position: 'relative',\n                    // bottom: '60px',\n                    paddingTop: '8px',\n                    borderRadius: '5px 0 0 5px',\n                    // border: 'solid grey .8px', \n                    backgroundColor: 'white', \n                    fontSize: '1.2em',\n                    textAlign: 'center',\n                    float: 'left',\n                    height: '100%',\n                    width: String(lableWidth) + '%',\n                    marginTop: '15px',\n                    zIndex: '999'\n                }}>\n                {minValue ? minValue : null}\n            </div>\n        { colors ? colors.map(color => \n            <div \n            style={{\n                // position: 'relative',\n                // bottom: '60px',\n                float: 'left',\n                height: '100%',\n                backgroundColor: color,\n                width: binWidth,\n                marginTop: '15px',\n                opacity: 1,\n                zIndex: '999'\n            }}\n            />) : null}\n                    <div\n                style={{\n                    // position: 'relative',\n                    // bottom: '60px',\n                    borderRadius: '0 5px 5px 0',\n                    paddingTop: '8px',\n                    // border: 'solid grey .8px', \n                    backgroundColor: 'white', \n                    fontSize: '1.2em',\n                    textAlign: 'center',\n                    float: 'left',\n                    height: '100%',\n                    width: String(lableWidth) + '%',\n                    marginTop: '15px',\n                    zIndex: '999'\n                }}>\n                {maxValue ? maxValue : null}\n            </div>\n        </div>\n    );\n};\n\nexport default ColorRamp;"]},"metadata":{},"sourceType":"module"}