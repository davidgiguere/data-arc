{"ast":null,"code":"import _objectSpread from \"/Users/erikwoodworth/Coding/ARC/data-arc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/erikwoodworth/Coding/ARC/data-arc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/erikwoodworth/Coding/ARC/data-arc/src/components/MapWrapper/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Map as LeafletMap, TileLayer, LayersControl, ZoomControl, ImageOverlay } from 'react-leaflet';\nimport GeoJSONLayer from '../MapLayers/GeoJSONLayer';\nimport OverlayLayer from '../MapLayers/OverlayLayer'; // import Loader from 'react-loader-spinner';\n\nimport API from '../../utils/API.js'; // import DataManifest from '../../config/DataManifest.json';\n\nimport OpenDataManifest from '../../config/OpenDataManifest';\n\nvar Map = function Map(props) {\n  // console.log(DataLabels['Social']);\n  var _useState = useState({\n    overlay_one: null,\n    overlay_two: null,\n    overlay_three: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      overlayData = _useState2[0],\n      setOverlayData = _useState2[1];\n\n  var apiOverlayData = function apiOverlayData(url1, url2, url3) {\n    API.getData(url1).then(function (res) {\n      var data = res.data.features;\n      setOverlayData(_objectSpread({}, overlayData, {\n        overlay_one: data\n      }));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n    API.getData(url2).then(function (res) {\n      var data = res.data.features;\n      setOverlayData(_objectSpread({}, overlayData, {\n        overlay_two: data\n      }));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n    API.getData(url3).then(function (res) {\n      var data = res.data.features;\n      setOverlayData(_objectSpread({}, overlayData, {\n        overlay_three: data\n      }));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  useEffect(function () {\n    return apiOverlayData('https://opendata.arcgis.com/datasets/63996663b8a040438defe56ef7ce31e3_0.geojson', 'https://opendata.arcgis.com/datasets/0248805ea42145d3b7d7194beafcc3d7_55.geojson', 'https://opendata.arcgis.com/datasets/91911cd123624a6b9b88cbf4266a2309_4.geojson');\n  }, []);\n  return React.createElement(LeafletMap, {\n    key: 'leaflet-map',\n    center: [33.8, -84.3],\n    zoom: 9,\n    maxZoom: 18,\n    attributionControl: true,\n    zoomControl: false,\n    doubleClickZoom: true,\n    scrollWheelZoom: true,\n    dragging: true,\n    animate: false // easeLinearity={0.7}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      border: 'solid grey .8px',\n      backgroundColor: 'white',\n      textAlign: 'center',\n      width: '60%',\n      borderRadius: '5px',\n      padding: '10px',\n      position: 'absolute',\n      top: '12px',\n      left: '20%',\n      zIndex: '9997',\n      opacity: '.9'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, props.data && props.selectedVariable ? OpenDataManifest[props.labelManifest].find(function (item) {\n    return item.Variable === props.selectedVariable;\n  }).Long // DataManifest.map(item => item.Variable === props.selectedVariable ? item.Long : null)\n  : 'No Variable Selected')), React.createElement(ZoomControl, {\n    position: \"topright\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), props.data ? React.createElement(GeoJSONLayer, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })) : null, React.createElement(LayersControl, {\n    position: \"topleft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(LayersControl.BaseLayer, {\n    name: \"OpenStreetMap Dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    key: 'tile-layer-dark',\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap: \\\"Map tiles by Carto, under CC BY 3.0.</a> contributors\",\n    url: \"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(LayersControl.BaseLayer, {\n    name: \"OpenStreetMap Mono\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    key: 'tile-layer-mono',\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(LayersControl.BaseLayer, {\n    name: \"OpenStreetMap Color\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    key: 'tile-layer-color',\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(LayersControl.Overlay, {\n    name: \"County Boundaries\",\n    checked: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, overlayData.overlay_one ? React.createElement(OverlayLayer, {\n    borderWeight: 2,\n    borderColor: \"black\",\n    data: overlayData.overlay_one,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }) : null), React.createElement(LayersControl.Overlay, {\n    name: \"City Boundaries\",\n    checked: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, overlayData.overlay_two ? React.createElement(OverlayLayer, {\n    borderWeight: 1.5,\n    borderColor: \"white\",\n    data: overlayData.overlay_two,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }) : null), React.createElement(LayersControl.Overlay, {\n    name: \"NPU Boundaries\",\n    checked: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, overlayData.overlay_three ? React.createElement(OverlayLayer, {\n    borderWeight: 1.5,\n    borderColor: \"black\",\n    data: overlayData.overlay_three,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }) : null)), React.createElement(TileLayer, {\n    key: 'tile-layer-default' // url='https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png'\n    ,\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }));\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/erikwoodworth/Coding/ARC/data-arc/src/components/MapWrapper/index.js"],"names":["React","useState","useEffect","Map","LeafletMap","TileLayer","LayersControl","ZoomControl","ImageOverlay","GeoJSONLayer","OverlayLayer","API","OpenDataManifest","props","overlay_one","overlay_two","overlay_three","overlayData","setOverlayData","apiOverlayData","url1","url2","url3","getData","then","res","data","features","catch","err","console","log","border","backgroundColor","textAlign","width","borderRadius","padding","position","top","left","zIndex","opacity","selectedVariable","labelManifest","find","item","Variable","Long"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Map as LeafletMap, TileLayer, LayersControl, ZoomControl, ImageOverlay } from 'react-leaflet';\nimport GeoJSONLayer from '../MapLayers/GeoJSONLayer';\nimport OverlayLayer from '../MapLayers/OverlayLayer';\n// import Loader from 'react-loader-spinner';\nimport API from '../../utils/API.js';\n// import DataManifest from '../../config/DataManifest.json';\nimport OpenDataManifest from '../../config/OpenDataManifest';\n\nconst Map = props => {\n\n\n  // console.log(DataLabels['Social']);\n\n  const [overlayData, setOverlayData] = useState({\n    overlay_one: null,\n    overlay_two: null,\n    overlay_three: null,\n  });\n\n  const apiOverlayData = (url1, url2, url3) => {\n\n    API.getData(url1)\n      .then(res => {\n        const data = res.data.features;\n        \n      setOverlayData({\n        ...overlayData,\n        overlay_one: data})\n    })\n      .catch(err => console.log(err));\n\n    API.getData(url2)\n      .then(res => {\n        const data = res.data.features;\n\n      setOverlayData({\n        ...overlayData,\n        overlay_two: data})\n    })\n      .catch(err => console.log(err));\n    \n    API.getData(url3)\n      .then(res => {\n        const data = res.data.features;\n\n      setOverlayData({\n        ...overlayData,\n        overlay_three: data})\n    })\n      .catch(err => console.log(err));\n  }\n\n  useEffect(() => apiOverlayData(\n    'https://opendata.arcgis.com/datasets/63996663b8a040438defe56ef7ce31e3_0.geojson',\n    'https://opendata.arcgis.com/datasets/0248805ea42145d3b7d7194beafcc3d7_55.geojson',\n    'https://opendata.arcgis.com/datasets/91911cd123624a6b9b88cbf4266a2309_4.geojson'\n    ), [])\n\n  return (\n    <LeafletMap\n      key={'leaflet-map'}\n      center={[33.8, -84.3]}\n      zoom={9}\n      maxZoom={18}\n      attributionControl={true}\n      zoomControl={false}\n      doubleClickZoom={true}\n      scrollWheelZoom={true}\n      dragging={true}\n      animate={false}\n      // easeLinearity={0.7}\n    >\n        <div style={{\n                border: 'solid grey .8px', \n                backgroundColor: 'white', \n                textAlign: 'center', \n                width: '60%', \n                borderRadius: '5px', \n                padding: '10px', \n                position: 'absolute', \n                top: '12px', \n                left: '20%', \n                zIndex: '9997',\n                opacity: '.9'\n                }}>\n            <h2>{props.data && props.selectedVariable ? \n                OpenDataManifest[props.labelManifest].find(item => item.Variable === props.selectedVariable).Long\n                // DataManifest.map(item => item.Variable === props.selectedVariable ? item.Long : null)\n                : 'No Variable Selected'}</h2>\n        </div>\n        <ZoomControl position=\"topright\" />\n\n\n\n      { props.data ?\n       <GeoJSONLayer {...props}/> : null }\n\n      {/* <ImageOverlay\n        url={\n        <Loader \n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height=\"100\"\t\n          width=\"100\"\n      />}\n      bounds={[[34, -84.5], [33.6, -84.1]]} \n      attribution={'react-loader-spinner'}\n      opacity={1}\n      /> */}\n\n    <LayersControl position=\"topleft\">\n      <LayersControl.BaseLayer name=\"OpenStreetMap Dark\">\n        <TileLayer\n          key={'tile-layer-dark'} \n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap: \"Map tiles by Carto, under CC BY 3.0.</a> contributors'\n          url=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\"\n        />\n      </LayersControl.BaseLayer>\n      <LayersControl.BaseLayer name=\"OpenStreetMap Mono\">\n        <TileLayer\n          key={'tile-layer-mono'}\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n        />\n      </LayersControl.BaseLayer>\n      <LayersControl.BaseLayer name=\"OpenStreetMap Color\">\n        <TileLayer\n          key={'tile-layer-color'}\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n      </LayersControl.BaseLayer>\n      <LayersControl.Overlay \n        name=\"County Boundaries\"\n        checked='false'>\n        { overlayData.overlay_one ?\n          <OverlayLayer \n          borderWeight={2}\n          borderColor={\"black\"}\n          data={overlayData.overlay_one}/> : null } \n      </LayersControl.Overlay>\n      <LayersControl.Overlay \n        name=\"City Boundaries\"\n        checked='false'>\n        { overlayData.overlay_two ?\n          <OverlayLayer \n          borderWeight={1.5}\n          borderColor={\"white\"}\n          data={overlayData.overlay_two}/> : null } \n      </LayersControl.Overlay>\n      <LayersControl.Overlay \n        name=\"NPU Boundaries\"\n        checked='false'>\n        { overlayData.overlay_three ?\n          <OverlayLayer \n          borderWeight={1.5}\n          borderColor={\"black\"}\n          data={overlayData.overlay_three}/> : null } \n      </LayersControl.Overlay>\n    </LayersControl>\n\n       \n      <TileLayer\n      key={'tile-layer-default'}\n      // url='https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png'\n      url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n      />\n     \n\n    </LeafletMap>\n\n  );\n};\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}