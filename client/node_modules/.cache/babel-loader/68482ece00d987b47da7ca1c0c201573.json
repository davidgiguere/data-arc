{"ast":null,"code":"var _jsxFileName = \"/Users/erikwoodworth/Coding/ARC/data-arc/client/src/components/MapLayers/OverlayLayer/index.js\";\nimport React from \"react\";\nimport { GeoJSON } from 'react-leaflet'; // import API from \"../../utils/API\";\n\nimport * as turf from '@turf/turf';\n\nvar OverlayLayer = function OverlayLayer(props) {\n  //Converts Polygon to LineString so overlay doesn't block GeoJson layer tooltip\n  //Need to test for geometry type to handle different inputs\n  var linestringData = props.data ? props.data.map(function (feature) {\n    return turf.polygonToLine(feature);\n  }) : null;\n  var borderWeight = props.borderWeight;\n  var borderColor = props.borderColor;\n  return React.createElement(GeoJSON // key={}\n  , {\n    data: props.data ? linestringData : null,\n    style: {\n      color: borderColor,\n      weight: borderWeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n};\n\nexport default OverlayLayer;","map":{"version":3,"sources":["/Users/erikwoodworth/Coding/ARC/data-arc/client/src/components/MapLayers/OverlayLayer/index.js"],"names":["React","GeoJSON","turf","OverlayLayer","props","linestringData","data","map","feature","polygonToLine","borderWeight","borderColor","color","weight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,eAAxB,C,CACA;;AACA,OAAO,KAAKC,IAAZ,MAAsB,YAAtB;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAG1B;AACA;AAEA,MAAMC,cAAc,GAAGD,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAe,UAAAC,OAAO;AAAA,WAAIN,IAAI,CAACO,aAAL,CAAmBD,OAAnB,CAAJ;AAAA,GAAtB,CAAb,GAAsE,IAA7F;AAEA,MAAME,YAAY,GAAGN,KAAK,CAACM,YAA3B;AACA,MAAMC,WAAW,GAAGP,KAAK,CAACO,WAA1B;AAEA,SACI,oBAAC,OAAD,CACA;AADA;AAEA,IAAA,IAAI,EAAEP,KAAK,CAACE,IAAN,GAAaD,cAAb,GAA8B,IAFpC;AAGA,IAAA,KAAK,EAAE;AACHO,MAAAA,KAAK,EAAED,WADJ;AAEHE,MAAAA,MAAM,EAAEH;AAFL,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAUH,CArBD;;AAuBA,eAAeP,YAAf","sourcesContent":["import React from \"react\";\nimport { GeoJSON } from 'react-leaflet';\n// import API from \"../../utils/API\";\nimport * as turf from '@turf/turf';\n\n\n\nconst OverlayLayer = props => {\n\n\n    //Converts Polygon to LineString so overlay doesn't block GeoJson layer tooltip\n    //Need to test for geometry type to handle different inputs\n\n    const linestringData = props.data ? props.data.map(feature => turf.polygonToLine(feature)) : null;\n\n    const borderWeight = props.borderWeight;\n    const borderColor = props.borderColor;\n\n    return (\n        <GeoJSON\n        // key={}\n        data={props.data ? linestringData : null}\n        style={{\n            color: borderColor,\n            weight: borderWeight,\n        }}\n      />\n    );\n};\n\nexport default OverlayLayer;"]},"metadata":{},"sourceType":"module"}