{"ast":null,"code":"import _slicedToArray from \"/Users/erikwoodworth/Coding/ARC/data-arc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/erikwoodworth/Coding/ARC/data-arc/src/components/ChartWrapper/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ScatterPlot from '../Charts/ScatterPlot';\nimport SimpleBarChart from '../Charts/BarChart';\n\nvar ChartWrapper = function ChartWrapper(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      chartType = _useState2[0],\n      setChartType = _useState2[1];\n\n  useEffect(function () {\n    return setChartType('bar-chart');\n  }, [props.data, props.selectedVariable]);\n  return React.createElement(\"div\", {\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, chartType === 'scatterplot' ? React.createElement(ScatterPlot, Object.assign({\n    key: 'scatterplot'\n  }, props, {\n    // hoverID={props.hoverID} \n    // data={props.data}\n    // layout={props.layout}\n    // selectedVariable={props.selectedVariable}\n    selectedSecondVar: 'TotPop_00',\n    hoverField: 'GEOID' // handleHoverID={props.handleHover}\n    // handleSecVarChange={handleSecVarChange}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })) : null, chartType === 'bar-chart' ? React.createElement(SimpleBarChart, Object.assign({\n    key: 'simple-bar-chart'\n  }, props, {\n    hoverField: 'GEOID' // hoverID={props.hoverID} \n    // data={props.data}\n    // layout={props.layout}\n    // selectedVariable={props.selectedVariable}\n    // handleHoverID={props.handleHover}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })) : null);\n};\n\nexport default ChartWrapper;","map":{"version":3,"sources":["/Users/erikwoodworth/Coding/ARC/data-arc/src/components/ChartWrapper/index.js"],"names":["React","useState","useEffect","ScatterPlot","SimpleBarChart","ChartWrapper","props","chartType","setChartType","data","selectedVariable","height","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,kBAEML,QAAQ,EAFd;AAAA;AAAA,MAEvBM,SAFuB;AAAA,MAEXC,YAFW;;AAM9BN,EAAAA,SAAS,CAAC;AAAA,WAAMM,YAAY,CAAC,WAAD,CAAlB;AAAA,GAAD,EAAkC,CAACF,KAAK,CAACG,IAAP,EAAaH,KAAK,CAACI,gBAAnB,CAAlC,CAAT;AAEA,SACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOL,SAAS,KAAK,aAAd,GACH,oBAAC,WAAD;AACI,IAAA,GAAG,EAAE;AADT,KAEQD,KAFR;AAGI;AACA;AACA;AACA;AACA,IAAA,iBAAiB,EAAE,WAPvB;AAQI,IAAA,UAAU,EAAE,OARhB,CASI;AAEA;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADG,GAcD,IAfN,EAkBOC,SAAS,KAAK,WAAd,GACH,oBAAC,cAAD;AACI,IAAA,GAAG,EAAE;AADT,KAEQD,KAFR;AAGI,IAAA,UAAU,EAAE,OAHhB,CAII;AACA;AACA;AACA;AACA;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADG,GAYD,IA9BN,CADJ;AAiDC,CAzDD;;AA2DA,eAAeD,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ScatterPlot from '../Charts/ScatterPlot';\nimport SimpleBarChart from '../Charts/BarChart';\n\nconst ChartWrapper = props => {\n\nconst [chartType , setChartType ] = useState();\n\n\n\nuseEffect(() => setChartType('bar-chart'), [props.data, props.selectedVariable]);\n\nreturn(\n    <div style={{height: '100%', width: '100%'}}>\n        {  chartType === 'scatterplot' ?\n        <ScatterPlot\n            key={'scatterplot'}\n            {...props}\n            // hoverID={props.hoverID} \n            // data={props.data}\n            // layout={props.layout}\n            // selectedVariable={props.selectedVariable}\n            selectedSecondVar={'TotPop_00'}\n            hoverField={'GEOID'}\n            // handleHoverID={props.handleHover}\n\n            // handleSecVarChange={handleSecVarChange}\n        />\n        : null\n        }\n\n        {  chartType === 'bar-chart' ?\n        <SimpleBarChart\n            key={'simple-bar-chart'}\n            {...props}\n            hoverField={'GEOID'}\n            // hoverID={props.hoverID} \n            // data={props.data}\n            // layout={props.layout}\n            // selectedVariable={props.selectedVariable}\n            // handleHoverID={props.handleHover}\n\n        />\n        : null\n        }\n\n        {/* {  layoutState.chartType === 'area-chart' ?\n        <AreaChart\n            \n            hoverID={hoverID} \n            data={dataState}\n            layoutState={layoutState}\n            handleHoverID={handleHover}\n\n        />\n        : null\n        } */}\n\n    </div>\n\n    );\n}\n\nexport default ChartWrapper;"]},"metadata":{},"sourceType":"module"}