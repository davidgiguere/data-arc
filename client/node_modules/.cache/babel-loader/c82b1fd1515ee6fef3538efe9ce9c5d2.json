{"ast":null,"code":"import _toConsumableArray from \"/Users/erikwoodworth/Coding/ARC/data-arc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/erikwoodworth/Coding/ARC/data-arc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/erikwoodworth/Coding/ARC/data-arc/client/src/components/Charts/BarChart/index.js\";\nimport React, { useState } from 'react';\nimport { ComposedChart, Bar, Cell, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts'; // import { Dropdown } from 'react-bootstrap';\n\nimport colormap from 'colormap';\nimport numeral from 'numeral';\nimport './style.css';\n\nvar SimpleBarChart = function SimpleBarChart(props) {\n  var _useState = useState('lohi'),\n      _useState2 = _slicedToArray(_useState, 2),\n      sortOrder = _useState2[0],\n      setSortOrder = _useState2[1]; // console.log('BAR CHART PROPS...')\n  // console.log(props)\n\n\n  var numberOfBins = props.layout.numberOfBins;\n  var colorMap = props.layout.colorMap;\n  var reverse = props.layout.colorMapReverse;\n  var colors = reverse ? colormap({\n    colormap: colorMap,\n    nshades: numberOfBins,\n    format: 'hex',\n    alpha: 1\n  }).reverse() : colormap({\n    colormap: colorMap,\n    nshades: numberOfBins,\n    format: 'hex',\n    alpha: 1\n  });\n  var valueArray = props.data ? props.data.features.filter(function (feature) {\n    return feature.properties[props.selectedVariable];\n  }).map(function (feature) {\n    var variable = feature.properties[props.selectedVariable];\n    var normalizer = props.normalizedBy ? feature.properties[props.normalizedBy] : 1;\n    return variable / normalizer;\n  }) : null;\n  var maxValue = valueArray !== null ? Math.max.apply(Math, _toConsumableArray(valueArray)) : 'Value array not load yet';\n  var minValue = valueArray !== null ? Math.min.apply(Math, _toConsumableArray(valueArray)) : 'Value array not load yet';\n  var dataArray = props.data ? props.data.features.map(function (feature) {\n    return {\n      x: feature.properties[props.selectedVariable],\n      name: feature.properties['NAME'],\n      id: feature.properties[props.hoverField]\n    };\n  }).sort(sortOrder === 'lohi' ? function (a, b) {\n    return a.x > b.x ? 1 : -1;\n  } : function (a, b) {\n    return a.x < b.x ? 1 : -1;\n  }) : null;\n  console.log(dataArray);\n  return React.createElement(ResponsiveContainer, {\n    key: \"rc-bar-chart-container\",\n    height: \"100%\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(ComposedChart, {\n    key: \"cc-bar-chart\",\n    data: dataArray,\n    margin: {\n      top: 40,\n      right: 15,\n      bottom: 20,\n      left: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(YAxis, {\n    name: props.selectedVariable,\n    dataKey: \"x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    key: \"bar-\" + props.selectedVariable,\n    name: props.selectedVariable,\n    dataKey: 'x',\n    fill: colors[0],\n    onMouseEnter: function onMouseEnter(point) {\n      return props.handleHover(point.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, dataArray ? dataArray.map(function (feature, index) {\n    var value = feature.x;\n    var name = feature.name;\n    var id = feature.id; // console.log(feature)\n    // console.log(feature);\n    // console.log(props.selectedVariable);\n\n    var distFromMin = value - minValue;\n    var range = maxValue - minValue;\n    var binningRatio = distFromMin / range;\n    var indexRange = numberOfBins - 1; // const opacity = value;\n\n    var color = colors[Math.floor(value === 0 ? 0 : binningRatio * indexRange)];\n    return React.createElement(Cell, {\n      key: \"cell-\".concat(index),\n      fill: color,\n      stroke: props.hoverID && id === props.hoverID ? 'black' : color,\n      strokeWidth: props.hoverID && id === props.hoverID ? 2 : 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    });\n  }) : null), React.createElement(Tooltip, {\n    key: \"tooltip-\" + props.selectedVariable,\n    itemStyle: {\n      color: 'black'\n    },\n    style: {\n      borderRadius: '5px'\n    },\n    cursor: {\n      strokeDasharray: '3 3'\n    },\n    animationEasing: 'ease-in-out',\n    formatter: function formatter(value) {\n      return typeof value === 'number' ? value % 1 !== 0 ? numeral(value).format('0,0.00') : numeral(value).format('0,0') : value;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })));\n};\n\nexport default SimpleBarChart;","map":{"version":3,"sources":["/Users/erikwoodworth/Coding/ARC/data-arc/client/src/components/Charts/BarChart/index.js"],"names":["React","useState","ComposedChart","Bar","Cell","XAxis","YAxis","Tooltip","ResponsiveContainer","colormap","numeral","SimpleBarChart","props","sortOrder","setSortOrder","numberOfBins","layout","colorMap","reverse","colorMapReverse","colors","nshades","format","alpha","valueArray","data","features","filter","feature","properties","selectedVariable","map","variable","normalizer","normalizedBy","maxValue","Math","max","minValue","min","dataArray","x","name","id","hoverField","sort","a","b","console","log","top","right","bottom","left","point","handleHover","index","value","distFromMin","range","binningRatio","indexRange","color","floor","hoverID","borderRadius","strokeDasharray"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { ComposedChart, Bar, Cell, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\n// import { Dropdown } from 'react-bootstrap';\nimport colormap from 'colormap';\nimport numeral from 'numeral';\nimport './style.css';\n\n\n\nconst SimpleBarChart = props => {\n\n  const [ sortOrder, setSortOrder] = useState('lohi');\n\n  // console.log('BAR CHART PROPS...')\n  // console.log(props)\n\n  const numberOfBins = props.layout.numberOfBins;\n  const colorMap = props.layout.colorMap;\n  const reverse = props.layout.colorMapReverse;\n\n  const colors = reverse ? colormap({\n      colormap: colorMap,\n      nshades: numberOfBins,\n      format: 'hex',\n      alpha: 1\n    }).reverse() : colormap({\n      colormap: colorMap,\n      nshades: numberOfBins,\n      format: 'hex',\n      alpha: 1\n    });\n\n  const valueArray = props.data ? props.data.features\n    .filter(feature => feature.properties[props.selectedVariable])\n    .map(feature => {\n  \n      const variable = feature.properties[props.selectedVariable];\n      const normalizer = props.normalizedBy ? feature.properties[props.normalizedBy] : 1\n\n        return variable/normalizer}) : null;\n\n  const maxValue = valueArray !== null ? Math.max(...valueArray) : 'Value array not load yet';\n  const minValue = valueArray !== null ? Math.min(...valueArray) : 'Value array not load yet';\n\n  const dataArray = props.data ? props.data.features.map(feature => \n        ({\n        x: feature.properties[props.selectedVariable],\n        name: feature.properties['NAME'],\n        id: feature.properties[props.hoverField]\n        })\n        ).sort(sortOrder === 'lohi' ? (a,b) => a.x > b.x ? 1 : -1 : (a,b) => a.x < b.x ? 1 : -1 ) : null;\n\n  console.log(dataArray);\n\n  return (\n    <ResponsiveContainer key={\"rc-bar-chart-container\"} height=\"100%\" width=\"100%\">\n     <ComposedChart \n        key={\"cc-bar-chart\"}\n        data={dataArray}\n        margin={{\n          top: 40, right: 15, bottom: 20, left: 10,\n        }}>\n        {/* <XAxis name={'bar-chart-axis'} dataKey=\"name\" /> */}\n        <YAxis name={props.selectedVariable} dataKey='x' />\n        <Bar \n          key={\"bar-\" + props.selectedVariable}\n          name={props.selectedVariable} \n          dataKey={'x'} \n          fill={colors[0]}\n          onMouseEnter={point => props.handleHover(point.id)} \n          >\n          {\n            dataArray ? dataArray.map((feature, index) => {\n              \n              const value=feature.x;\n              const name=feature.name;\n              const id=feature.id;\n\n              // console.log(feature)\n\n              // console.log(feature);\n      \n              // console.log(props.selectedVariable);\n              const distFromMin = value - minValue;\n              const range = maxValue - minValue;\n              const binningRatio = distFromMin/range;\n              const indexRange = numberOfBins - 1;\n              // const opacity = value;\n              const color = colors[Math.floor(value === 0 ? 0 : binningRatio * indexRange)];\n              \n\n              return <Cell \n                key={`cell-${index}`} \n                fill={color} \n                stroke={props.hoverID && id === props.hoverID ? 'black' : color}\n                strokeWidth={props.hoverID && id === props.hoverID ? 2 : 1}\n                />\n            }) : null\n          }\n        </Bar>\n        {/* <Area type=\"monotone\" dataKey={'x'} fill=\"#8884d8\" stroke=\"#8884d8\" /> */}\n        {/* <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" /> */}\n        <Tooltip\n          key={\"tooltip-\" + props.selectedVariable}\n          itemStyle={{ color: 'black' }}\n          style={{ borderRadius: '5px'}}\n          cursor={{ strokeDasharray: '3 3' }} \n          animationEasing={'ease-in-out'}\n          formatter={ value => \n            typeof value === 'number' ? \n            value % 1 !== 0 ? \n            numeral(value).format('0,0.00') \n            : numeral(value).format('0,0')\n            : value\n            } />\n      </ComposedChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default SimpleBarChart;\n\n\n"]},"metadata":{},"sourceType":"module"}